!function(){angular.module("connect4",["ngRoute","ui.router","ui.bootstrap","angularMoment"])}(),function(){angular.module("connect4").config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/test"),$stateProvider.state("test",{url:"/test",templateUrl:"src/views/test.html",controller:"TestController",data:{pageTitle:"Test View"}}).state("game",{url:"/game",templateUrl:"src/views/connect4.html",controller:"GameController",data:{pageTitle:"Game View"}})}).run(function($rootScope){$rootScope.$on("$viewContentLoaded",function(){})})}(),function(){angular.module("connect4").config(["$httpProvider",function($httpProvider){delete $httpProvider.defaults.headers.common["X-Requested-With"]}])}(),angular.module("connect4").controller("GameController",function($scope){$scope.player1={ready:!1},$scope.player2={ready:!1},$scope.matrix=[],$scope.currentPlayer=null;for(var i=5;i>=0;i--){$scope.matrix[i]=[];for(var j=6;j>=0;j--)$scope.matrix[i][j]={available:!0,line:i,column:j}}$scope.checkAvailability=function(line,column){if($scope.isReady())for(var i=5;i>=0;i--)if(i===line)for(var j=6;j>=0;j--)j===column&&$scope.updateLowestPiece(line,column)},$scope.updateLowestPiece=function(line,column){for(var i=$scope.matrix.length-1;i>=line;i--)for(var j=6;j>=0;j--)if(j===column&&$scope.matrix[i][j].available)return $scope.matrix[i][j].player=$scope.getCurrentPlayer(),$scope.matrix[i][j].available=!1,void $scope.switchPlayer()},$scope.isReady=function(){return $scope.player1.ready&&$scope.player2.ready?!0:void 0},$scope.validatePlayer=function(player){""!==player.nickname&&""!==player.color?player.ready=!0:(player.errorMessage="Please inform your nickname and select your color",player.hasError=!0),$scope.isReady()&&$scope.startGame()},$scope.startGame=function(){$scope.currentPlayer=Math.floor(2*Math.random())+1===1?$scope.player2:$scope.player1},$scope.getCurrentPlayer=function(){return $scope.currentPlayer},$scope.switchPlayer=function(){$scope.currentPlayer=$scope.currentPlayer===$scope.player1?$scope.player2:$scope.player1}}),angular.module("connect4").controller("MainController",function($scope,$state){$scope.authBackground=$state.includes("dashboards")}),angular.module("connect4").controller("TestController",function($scope){$scope.connect="Connect"}),function(){angular.module("connect4").directive("countUp",function(){return{restrict:"A",scope:{value:"@",prefix:"@",suffix:"@"},link:function(scope,elem){var options={useEasing:!0,useGrouping:!0,separator:".",decimal:",",prefix:scope.prefix||"",suffix:scope.suffix||""};scope.$watch("value",function(newVal){var count=new countUp(elem,0,parseFloat(newVal),2,2,options);count.start()})}}})}(),function(){angular.module("connect4").directive("ngMoment",function(){return{restrict:"A",scope:{value:"@",parse:"@",format:"@",locale:"@"},link:function(scope,elem){window.moment.locale(scope.locale||"pt-br"),scope.value?$(elem).html(scope.parse?window.moment(scope.value,scope.parse).format(scope.format):window.moment(scope.value).format(scope.format)):window.setInterval(function(){$(elem).html(window.moment().format(scope.format))},1e3)}}})}(),function(){angular.module("connect4").directive("pageTitle",function($rootScope,$timeout){return{link:function(scope,element){var listener=function(event,toState){var title="connect4 | ";toState.data&&toState.data.pageTitle&&(title="connect4 | "+toState.data.pageTitle),$timeout(function(){element.text(title)})};$rootScope.$on("$stateChangeStart",listener)}}})}(),function(){angular.module("connect4").directive("piece",function(){return{restrict:"AE",replace:"true",template:"<div class='piece' ng-class=''></div>",scope:{item:"@"},link:function(scope,el){function render(){var evalItem=scope.$eval(scope.item);evalItem.available||($(el).addClass("selected"),$(el).css({backgroundColor:evalItem.player.color}))}scope.$watch("item",function(newValue,oldValue){console.log(newValue),console.log(oldValue),render()})}}})}(),function(){angular.module("connect4").factory("AuthUsers",function($http,$location,SessionControll){var cacheSession=function(user){SessionControll.set("userLogin",!0),SessionControll.set("user",user)},unCacheSession=function(){SessionControll.unset("userLogin"),SessionControll.unset("user")};return{login:function(user){return $http({url:"login/validateLogin",method:"POST",cache:!1,data:"email="+user.email+"&password="+user.password+"&datetime="+(new Date).getTime(),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(data){data.status===!0&&cacheSession(JSON.stringify(data.user))}).error(function(){})},logout:function(){return $http({url:"/login/logout/?t="+(new Date).getTime()}).success(function(){unCacheSession(),$location.path("/login")})},isLoggedIn:function(){return SessionControll.get("userLogin")}}})}(),function(){angular.module("connect4").factory("SessionControll",function(){return{get:function(key){return window.sessionStorage.getItem(key)},set:function(key,val){return window.sessionStorage.setItem(key,val)},unset:function(key){return window.sessionStorage.removeItem(key)}}})}();